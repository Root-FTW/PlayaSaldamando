{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/widgets/WeatherWidget.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { weatherService, type WeatherData } from '@/services/weatherService';\n\nexport default function WeatherWidget() {\n  const [weather, setWeather] = useState<WeatherData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [lastUpdated, setLastUpdated] = useState<string>('');\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const weatherData = await weatherService.getCurrentWeather();\n        setWeather(weatherData);\n\n        // Set last updated time\n        const updateTime = new Date(weatherData.lastUpdated * 1000).toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true\n        });\n        setLastUpdated(updateTime);\n\n      } catch (err) {\n        console.error('Error fetching weather:', err);\n        setError('Unable to load weather data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWeatherData();\n\n    // Refresh weather data every 10 minutes\n    const interval = setInterval(fetchWeatherData, 10 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getWeatherIcon = (iconCode: string, condition: string) => {\n    // OpenWeatherMap icon codes to emoji mapping\n    const iconMap: { [key: string]: string } = {\n      '01d': '‚òÄÔ∏è', // clear sky day\n      '01n': 'üåô', // clear sky night\n      '02d': '‚õÖ', // few clouds day\n      '02n': '‚òÅÔ∏è', // few clouds night\n      '03d': '‚òÅÔ∏è', // scattered clouds\n      '03n': '‚òÅÔ∏è',\n      '04d': '‚òÅÔ∏è', // broken clouds\n      '04n': '‚òÅÔ∏è',\n      '09d': 'üåßÔ∏è', // shower rain\n      '09n': 'üåßÔ∏è',\n      '10d': 'üå¶Ô∏è', // rain day\n      '10n': 'üåßÔ∏è', // rain night\n      '11d': '‚õàÔ∏è', // thunderstorm\n      '11n': '‚õàÔ∏è',\n      '13d': '‚ùÑÔ∏è', // snow\n      '13n': '‚ùÑÔ∏è',\n      '50d': 'üå´Ô∏è', // mist\n      '50n': 'üå´Ô∏è'\n    };\n\n    const emoji = iconMap[iconCode] || (condition.includes('Cloud') ? '‚òÅÔ∏è' : '‚òÄÔ∏è');\n    return <div className=\"h-8 w-8 text-4xl\">{emoji}</div>;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n          <div className=\"h-8 bg-gray-200 rounded w-1/2 mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-full mb-2\"></div>\n          <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !weather) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Current Weather</h3>\n        <p className=\"text-red-600\">Unable to load weather data</p>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-gradient-to-br from-blue-50 to-ocean-50 rounded-xl shadow-lg p-6 border border-gray-100\"\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Current Weather</h3>\n        <div className=\"text-xs text-gray-500\">{weather.location}</div>\n      </div>\n\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          {getWeatherIcon(weather.icon, weather.condition)}\n          <div>\n            <div className=\"text-3xl font-bold text-gray-900\">{weather.temperature}¬∞C</div>\n            <div className=\"text-sm text-gray-600 capitalize\">{weather.description}</div>\n            <div className=\"text-xs text-gray-500\">Feels like {weather.feelsLike}¬∞C</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-4 h-4 bg-blue-500 rounded-full\"></div>\n          <div>\n            <div className=\"text-gray-500\">Humidity</div>\n            <div className=\"font-medium\">{weather.humidity}%</div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-lg\">üí®</div>\n          <div>\n            <div className=\"text-gray-500\">Wind</div>\n            <div className=\"font-medium\">{weather.windSpeed} km/h {weatherService.getWindDirection(weather.windDirection)}</div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-lg\">üëÅÔ∏è</div>\n          <div>\n            <div className=\"text-gray-500\">Visibility</div>\n            <div className=\"font-medium\">{weather.visibility} km</div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-lg\">üåû</div>\n          <div>\n            <div className=\"text-gray-500\">UV Index</div>\n            <div className=\"font-medium\">{weather.uvIndex} ({weatherService.getUVIndexDescription(weather.uvIndex)})</div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"text-lg\">üå°Ô∏è</div>\n          <div>\n            <div className=\"text-gray-500\">Pressure</div>\n            <div className=\"font-medium\">{weather.pressure} hPa</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <div className=\"flex justify-between items-center text-xs text-gray-500\">\n          <div>\n            üåÖ {weatherService.formatTime(weather.sunrise)} | üåá {weatherService.formatTime(weather.sunset)}\n          </div>\n          <div>\n            Updated: {lastUpdated}\n          </div>\n        </div>\n        <div className=\"text-xs text-gray-500 text-center mt-2\">\n          {weather.temperature >= 20 && weather.temperature <= 28 && weather.condition !== 'Rain'\n            ? 'Perfect beach weather! üèñÔ∏è'\n            : weather.condition === 'Rain'\n            ? 'Great day for indoor activities ‚òî'\n            : weather.temperature < 20\n            ? 'Cool weather - bring a jacket üß•'\n            : 'Hot day - stay hydrated! üíß'\n          }\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}