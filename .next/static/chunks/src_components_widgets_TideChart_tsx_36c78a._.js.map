{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/widgets/TideChart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { tidesService, type TideInfo } from '@/services/tidesService';\n\nexport default function TideChart() {\n  const [tideInfo, setTideInfo] = useState<TideInfo | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showTomorrow, setShowTomorrow] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState<string>('');\n\n  useEffect(() => {\n    const fetchTideData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const data = await tidesService.getTideData();\n        setTideInfo(data);\n\n        // Set last updated time\n        const updateTime = new Date(data.lastUpdated).toLocaleTimeString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true\n        });\n        setLastUpdated(updateTime);\n\n      } catch (err) {\n        console.error('Error fetching tide data:', err);\n        setError('Unable to load tide data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTideData();\n\n    // Refresh tide data every 30 minutes\n    const interval = setInterval(fetchTideData, 30 * 60 * 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n          <div className=\"space-y-2\">\n            {[1,2,3,4].map(i => (\n              <div key={i} className=\"h-8 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !tideInfo) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n        <div className=\"text-center text-red-600\">\n          <p className=\"text-sm\">Unable to load tide data</p>\n          <p className=\"text-xs text-gray-500 mt-1\">Showing simulated data</p>\n        </div>\n      </div>\n    );\n  }\n\n  const currentTides = showTomorrow ? tideInfo.tomorrowTides : tideInfo.todayTides;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl shadow-lg p-6 border border-gray-100\"\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Tide Information</h3>\n        <div className=\"text-xs text-gray-500\">{tideInfo.location}</div>\n      </div>\n\n      {/* Current Tide Status */}\n      <div className=\"mb-4 p-3 bg-blue-100 rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-2 h-2 rounded-full animate-pulse ${\n              tideInfo.currentTide.status === 'Rising' ? 'bg-green-500' : 'bg-orange-500'\n            }`}></div>\n            <span className=\"text-sm font-medium text-blue-800\">\n              {tideInfo.currentTide.status} Tide\n            </span>\n          </div>\n          <div className=\"text-xs text-blue-600\">\n            Next: {tideInfo.currentTide.nextTide.type} in {tideInfo.currentTide.timeToNext}\n          </div>\n        </div>\n        <div className=\"mt-2 text-xs text-blue-700\">\n          {tidesService.getTideAdvice(tideInfo.currentTide.status, tideInfo.currentTide.nextTide)}\n        </div>\n      </div>\n\n      {/* Day Toggle */}\n      <div className=\"flex mb-4\">\n        <button\n          onClick={() => setShowTomorrow(false)}\n          className={`flex-1 py-2 px-4 text-sm font-medium rounded-l-lg transition-colors ${\n            !showTomorrow\n              ? 'bg-blue-600 text-white'\n              : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n          }`}\n        >\n          Today\n        </button>\n        <button\n          onClick={() => setShowTomorrow(true)}\n          className={`flex-1 py-2 px-4 text-sm font-medium rounded-r-lg transition-colors ${\n            showTomorrow\n              ? 'bg-blue-600 text-white'\n              : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n          }`}\n        >\n          Tomorrow\n        </button>\n      </div>\n\n      {/* Tide List */}\n      <div className=\"space-y-3\">\n        {currentTides.map((tide, index) => (\n          <motion.div\n            key={`${showTomorrow ? 'tomorrow' : 'today'}-${index}`}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-gray-100\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className={`p-2 rounded-full ${\n                tide.type === 'High'\n                  ? 'bg-blue-100 text-blue-600'\n                  : 'bg-orange-100 text-orange-600'\n              }`}>\n                <span className=\"text-lg\">\n                  {tide.type === 'High' ? '⬆️' : '⬇️'}\n                </span>\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">{tide.time}</div>\n                <div className=\"text-sm text-gray-500\">\n                  {tide.type} Tide\n                </div>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"font-semibold text-gray-900\">\n                {tidesService.getTideHeight(tide.height)}\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {tide.timestamp > Date.now() ? 'Upcoming' : 'Past'}\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Footer Info */}\n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <div className=\"flex justify-between items-center text-xs text-gray-500 mb-2\">\n          <div>\n            Data from NOAA • Updated: {lastUpdated}\n          </div>\n          <div>\n            Station: Ensenada, MX\n          </div>\n        </div>\n        <div className=\"flex items-start space-x-2\">\n          <span className=\"text-blue-500 mt-0.5\">ℹ️</span>\n          <div className=\"text-xs text-gray-600\">\n            Real-time tide data from NOAA. Times are in local time (PST/PDT).\n            Check current conditions before water activities.\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}