{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/widgets/TideChart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport {\n  ArrowUpIcon,\n  ArrowDownIcon,\n  ClockIcon,\n  InformationCircleIcon\n} from '@heroicons/react/24/outline';\n\ninterface TideData {\n  time: string;\n  height: number;\n  type: 'high' | 'low';\n}\n\nexport default function TideChart() {\n  const [tides, setTides] = useState<TideData[]>([]);\n  const [currentTide, setCurrentTide] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate tide data for Ensenada area\n    const generateTideData = () => {\n      const now = new Date();\n      const tideData: TideData[] = [];\n\n      // Generate 4 tide times for today (2 high, 2 low)\n      const baseTimes = [\n        { hour: 6, minute: 30, type: 'high' as const, height: 1.8 },\n        { hour: 12, minute: 45, type: 'low' as const, height: 0.3 },\n        { hour: 18, minute: 15, type: 'high' as const, height: 1.9 },\n        { hour: 23, minute: 50, type: 'low' as const, height: 0.2 },\n      ];\n\n      baseTimes.forEach(tide => {\n        const tideTime = new Date(now);\n        tideTime.setHours(tide.hour, tide.minute, 0, 0);\n\n        tideData.push({\n          time: tideTime.toLocaleTimeString('en-US', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: true\n          }),\n          height: tide.height,\n          type: tide.type\n        });\n      });\n\n      setTides(tideData);\n\n      // Determine current tide status\n      const currentHour = now.getHours();\n      if (currentHour >= 6 && currentHour < 12) {\n        setCurrentTide('Rising tide');\n      } else if (currentHour >= 12 && currentHour < 18) {\n        setCurrentTide('Falling tide');\n      } else if (currentHour >= 18 && currentHour < 23) {\n        setCurrentTide('Rising tide');\n      } else {\n        setCurrentTide('Falling tide');\n      }\n\n      setLoading(false);\n    };\n\n    generateTideData();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-xl shadow-lg p-6 border border-gray-100\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-4\"></div>\n          <div className=\"space-y-2\">\n            {[1,2,3,4].map(i => (\n              <div key={i} className=\"h-8 bg-gray-200 rounded\"></div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl shadow-lg p-6 border border-gray-100\"\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">Today's Tides</h3>\n        <ClockIcon className=\"h-5 w-5 text-blue-500\" />\n      </div>\n\n      <div className=\"mb-4 p-3 bg-blue-100 rounded-lg\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm font-medium text-blue-800\">{currentTide}</span>\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        {tides.map((tide, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className=\"flex items-center justify-between p-3 bg-white rounded-lg border border-gray-100\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className={`p-2 rounded-full ${\n                tide.type === 'high'\n                  ? 'bg-blue-100 text-blue-600'\n                  : 'bg-orange-100 text-orange-600'\n              }`}>\n                {tide.type === 'high' ? (\n                  <ArrowUpIcon className=\"h-4 w-4\" />\n                ) : (\n                  <ArrowDownIcon className=\"h-4 w-4\" />\n                )}\n              </div>\n              <div>\n                <div className=\"font-medium text-gray-900\">{tide.time}</div>\n                <div className=\"text-sm text-gray-500\">\n                  {tide.type === 'high' ? 'High Tide' : 'Low Tide'}\n                </div>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"font-semibold text-gray-900\">{tide.height}m</div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      <div className=\"mt-4 pt-4 border-t border-gray-200\">\n        <div className=\"flex items-start space-x-2\">\n          <InformationCircleIcon className=\"h-4 w-4 text-blue-500 mt-0.5 flex-shrink-0\" />\n          <div className=\"text-xs text-gray-600\">\n            Tide times are approximate. Check local conditions before water activities.\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}